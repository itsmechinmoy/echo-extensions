name: release

on:
    workflow_dispatch:

env:
    APK_PATH: null

# {
# 	"to_download": {
# 		"Codex": {
# 			"name": "Codex_2.623.apk",
# 			"type": "enumeration",
# 			"identifier": { "latest": "2.622", "enum_limit": 500, "increment_limit": 999, "pattern": "\\d+(?:\\.\\d+)+" },
# 			"url": "https://cdn.codex.lol/public/Codex_",
# 			"patterns": null,
# 			"url_encoded": false
# 		},
# 		"Dantotsu": {
# 			"name": "app-google-alpha.apk",
# 			"type": "artifact",
# 			"identifier": {
# 				"latest": "f0f2d2aba6b71f9649c29cb455b4953be0459fa879643ab4f988b56bc290c564",
# 				"enum_limit": 0,
# 				"increment_limit": 0,
# 				"pattern": "\\/([a-zA-Z0-9]+)\\.zip"
# 			},
# 			"url": "https://github.com/rebelonion/Dantotsu/actions/workflows/beta.yml?query=branch%3Adev",
# 			"patterns": ["app-google-alpha.apk"],
# 			"url_encoded": false
# 		},
# 		"TikTok": {
# 			"name": "34.9.5-universal.apk",
# 			"type": "web",
# 			"identifier": { "latest": "0", "enum_limit": 0, "increment_limit": 0, "pattern": "\\/(\\d+(?:\\.\\d+)+)" },
# 			"url": "https://store.kde.org/p/1515346/loadFiles",
# 			"patterns": ["https://files04\\.pling\\.com/api/files/download/j/[^/]+/\\d+(?:\\.\\d+)+-universal\\.apk"],
# 			"url_encoded": true
# 		},
# 		"TikTok Plugin": {
# 			"name": "1.41_plugin.apk",
# 			"type": "web",
# 			"identifier": { "latest": "0", "enum_limit": 0, "increment_limit": 0, "pattern": "\\d+(?:\\.\\d+)+" },
# 			"url": "https://tiktokmodcloud.com/ttplugin.html",
# 			"patterns": ["https://oxy\\.cloud\\/[^\\s\"']+", "https://loader\\.oxy\\.st\\/get\\/[^\\s\"']+"],
# 			"url_encoded": false
# 		}
# 	},
# 	"wait_time": 15
# }


jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: List of domains
              id: list-domains
              run: |
                  jq -r '.to_download | to_entries | .[] | .value.url' settings.json | sed -E 's|(https?://[^/]+).*|\1|' > domains.txt

            - name: Ping Domains
              run: |
                  while read -r domain; do
                      ping -c 4 "$domain" || true
                  done < domains.txt

            - name: Check HTTP Access
              run: |
                  while read -r domain; do
                      curl -I "$domain" || true
                  done < domains.txt

            - name: Run Main.go
              id: run-main
              run: |
                  go run ./src/main.go --token="${{ secrets.GITHUB_TOKEN }}"

            - name: Set Environment Variables
              run: |
                  echo "APK_PATH=$(ls -S out/*.apk | head -n 1)" >> $GITHUB_ENV
                  if [[ "${{ steps.run-main.outcome }}" != "success" ]]; then
                      exit 1
                  fi

            - name: Get Apk Info
              id: apk-info
              uses: hkusu/apk-info-action@v1
              with:
                  apk-path: ${{ env.APK_PATH }}

            - name: Commit Changes
              run: |
                  git config --global user.email "apk-artifacts-downloader@github.com"
                  git config --global user.name "${{ github.repository_owner }}"
                  git add .
                  git commit -m "Update ${{ steps.apk-info.outputs.application-name }} to ${{ steps.apk-info.outputs.version-name }}"

            - name: Push Changes
              uses: ad-m/github-push-action@master
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  files: ${{ env.APK_PATH }}
                  tag_name: ${{ steps.apk-info.outputs.version-name }}
                  name: ${{ steps.apk-info.outputs.application-name }}
                  body: ${{ steps.apk-info.outputs.version-name }}

    rerun-workflow:
        name: Re-run workflow
        needs: release
        if: success() || failure()
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Wait for 5 minutes
              run: |
                  sleep 300

            - name: Re-trigger workflow
              run: gh workflow run release.yml
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GH_REPO: ${{ github.repository }}
