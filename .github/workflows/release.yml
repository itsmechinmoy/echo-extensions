name: release

on:
    workflow_dispatch:

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Run Main.go
              id: run-main
              run: |
                  go run ./src/main.go --token="${{ secrets.GITHUB_TOKEN }}"

            - name: Set Environment Variables
              id: set-vars
              run: |
                  apk_path=$(ls -S out/*.apk | head -n 1)
                  if [[ -z "$apk_path" ]]; then
                      echo "Error: No APK file found."
                      exit 1
                  fi
                  echo "APK_PATH=$apk_path" >> $GITHUB_ENV

                  # Check if settings.json exists and is readable
                  if [[ -f settings.json ]]; then
                      # Extract latest version for "Echo Youtube" from settings.json
                      version_name=$(jq -r '.to_download["Echo Youtube"].identifier.latest' settings.json)
                      if [[ -z "$version_name" ]]; then
                          echo "Error: identifier.latest not found in settings.json."
                          exit 1
                      fi
                      echo "TAG_NAME=$version_name" >> $GITHUB_ENV
                  else
                      echo "Error: settings.json not found."
                      exit 1
              shell: /usr/bin/bash -e {0}

            - name: Debug Environment Variables
              run: |
                  echo "APK_PATH=${{ env.APK_PATH }}"
                  echo "TAG_NAME=${{ env.TAG_NAME }}"

            - name: Create Tag if Not Exists
              id: create-tag
              run: |
                  tag_name="${{ env.TAG_NAME }}"
                  if [[ -z "$tag_name" ]]; then
                      echo "TAG_NAME is not set. Exiting."
                      exit 1
                  fi

                  if ! git rev-parse "$tag_name" >/dev/null 2>&1; then
                      echo "Creating new tag: $tag_name"
                      git tag "$tag_name"
                      git push origin "$tag_name"
                  else
                      echo "Tag $tag_name already exists"
                  fi

            - name: Create Release
              if: env.APK_PATH != 'null' && env.TAG_NAME != 'null'
              uses: softprops/action-gh-release@v1
              with:
                  files: ${{ env.APK_PATH }}
                  tag_name: ${{ env.TAG_NAME }}
                  name: Echo Youtube Release
                  body: Release of version ${{ env.TAG_NAME }}
